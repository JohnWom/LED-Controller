# !!! WARNING !!! AUTO-GENERATED FILE, PLEASE DO NOT MODIFY IT AND USE
# https://docs.platformio.org/page/projectconf/section_env_build.html#build-flags
#
# If you need to override existing CMake configuration or add extra,
# please create `CMakeListsUser.txt` in the root of project.
# The `CMakeListsUser.txt` will not be overwritten by PlatformIO.



set(CMAKE_CONFIGURATION_TYPES "nano_33_iot" CACHE STRING "Build Types reflect PlatformIO Environments" FORCE)

# Convert "Home Directory" that may contain unescaped backslashes on Windows
file(TO_CMAKE_PATH $ENV{HOMEDRIVE}$ENV{HOMEPATH} ENV_HOME_PATH)

set(CLION_SVD_FILE_PATH "${ENV_HOME_PATH}/.platformio/platforms/atmelsam/misc/svd/ATSAMD21G18A.svd" CACHE FILEPATH "Peripheral Registers Definitions File" FORCE)

SET(CMAKE_C_COMPILER "${ENV_HOME_PATH}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/bin/arm-none-eabi-gcc.exe")
SET(CMAKE_CXX_COMPILER "${ENV_HOME_PATH}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/bin/arm-none-eabi-g++.exe")
SET(CMAKE_CXX_FLAGS -fno-rtti -fno-exceptions -std=gnu++11 -fno-threadsafe-statics -mcpu=cortex-m0plus -mthumb -Os -ffunction-sections -fdata-sections -Wall -nostdlib --param max-inline-insns-single=500)
SET(CMAKE_C_FLAGS -std=gnu11 -mcpu=cortex-m0plus -mthumb -Os -ffunction-sections -fdata-sections -Wall -nostdlib --param max-inline-insns-single=500)

SET(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 11)

if (CMAKE_BUILD_TYPE MATCHES "nano_33_iot")
    add_definitions(-DPLATFORMIO=60109)
    add_definitions(-DARDUINO_SAMD_NANO_33_IOT)
    add_definitions(-DCRYSTALLESS)
    add_definitions(-D__SAMD21G18A__)
    add_definitions(-DARDUINO=10805)
    add_definitions(-DF_CPU=48000000L)
    add_definitions(-DUSBCON)
    add_definitions(-DUSB_VID=0x2341)
    add_definitions(-DUSB_PID=0x8057)
    add_definitions(-DUSB_PRODUCT=\"Arduino\ NANO\ 33\ IoT\")
    add_definitions(-DUSB_MANUFACTURER=\"Arduino\")
    add_definitions(-DARDUINO_ARCH_SAMD)

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/nano_33_iot/DFRobot_RGBLCD1602")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-samd/libraries/Wire")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-samd/cores/arduino/api/deprecated")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-samd/cores/arduino/api/deprecated-avr-comp")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-cmsis/CMSIS/Include")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-cmsis-atmel/CMSIS/Device/ATMEL")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-samd/cores/arduino")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-samd/variants/nano_33_iot")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-samd/libraries/HID")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-samd/libraries/I2S/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-samd/libraries/SAMD_AnalogCorrection/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-samd/libraries/SAMD_BootloaderUpdater/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-samd/libraries/SBU/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-samd/libraries/SDU/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-samd/libraries/SFU/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-samd/libraries/SNU/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-samd/libraries/SPI")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-samd/libraries/SSU/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-samd/libraries/USBHost/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include/c++/7.2.1")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include/c++/7.2.1/arm-none-eabi")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/lib/gcc/arm-none-eabi/7.2.1/include")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/lib/gcc/arm-none-eabi/7.2.1/include-fixed")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/nano_33_iot/*.*
    )
endif()


FILE(GLOB_RECURSE SRC_LIST
    ${CMAKE_CURRENT_LIST_DIR}/src/*.*
    ${CMAKE_CURRENT_LIST_DIR}/lib/*.*
    ${CMAKE_CURRENT_LIST_DIR}/test/*.*
)

list(APPEND SRC_LIST ${EXTRA_LIB_SOURCES})
